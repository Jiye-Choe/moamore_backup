<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- namespce -->
  <mapper namespace="record">
  	<!-- 예산 내역 입력하기 -->
  	<insert id="insertBudget" parameterType="budgetDTO" useGeneratedKeys="true" keyProperty="budget_outcome_no" keyColumn="budget_outcome_no">	
  		insert into budget values(budget_outcome_no_seq.nextval, #{budget_no}, #{id}, #{category_no}, #{amount}, #{reg})
  	</insert>
  	<!-- 예산 세부내역 입력하기 -->
  	<insert id="insertBudgetDetail" parameterType="budgetDetailDTO">
  		insert into budget_detail values(#{budget_outcome_no}, #{content}, #{memo}, #{img})
  	</insert>
  	<!-- 예산 외 내역 입력하기(noBudget) -->
  	<insert id="insertNoBudget" parameterType="noBudgetDTO" useGeneratedKeys="true" keyProperty="nobudget_no" keyColumn="nobudget_no">
  		insert into nobudget values(nobudget_no_seq.nextVal, #{id}, #{type}, #{category_no}, #{amount}, #{reg})
  	</insert>
  	<!-- 예산 외 세부내역 입력하기 -->
  	<insert id="insertNoBudgetDetail" parameterType="noBudgetDetailDTO">
  		insert into nobudget_detail values(${nobudget_no}, #{content}, #{memo}, #{img})
  	</insert>
 
 	<!-- 예산번호로 예산 지출 내역 리스트 가져오기 -->
  	<select id="selectBudgetRecord" parameterType="hashmap" resultType="allRecordDTO">
  		<![CDATA[SELECT t2.* from(SELECT ROWNUM r, t1.* from(SELECT * FROM (SELECT * FROM BUDGET b JOIN BUDGET_DETAIL bd ON b.BUDGET_OUTCOME_NO = bd.BUDGET_OUTCOME_NO WHERE budget_no=#{budgetNum}) ORDER BY reg DESC)t1)t2 WHERE r >=#{startRow} AND r <=#{endRow}]]>	 
  	</select>
  	  	
  	<!-- 예산번호로 예산지출 내역 총 개수 가져오기 -->
  	<select id="countBudgetRecord" parameterType="int" resultType="int">
  		select count(*) from budget where budget_no=#{value}
  	</select>
  	
  	<!-- 예산 지출 고유 번호로 해당 예산 내역 삭제 -->
  	<delete id="deleteBudgetRecord" parameterType="string" >
  		delete from budget where budget_outcome_no=#{value}
  	</delete>
  	
  	<!-- 예산 외 수입or지출 내역 총 개수 가져오기 -->
  	<select id="countNoBudgetRecord" parameterType="searchForRecordDTO" resultType="int">
  		SELECT count(*) FROM NOBUDGET WHERE id=#{id} and type=#{type} AND TO_CHAR(reg,'YYYY-MM')=#{searchDate}
  	</select>
  	
  	<!-- 아이디, 타입으로 예산 외 수입or지출내역 리스트로 가져오기 -->
  	<select id="selectNoBudgetRecord" parameterType="searchForRecordDTO" resultType="allRecordDTO">  	
		<![CDATA[SELECT t2.* from(SELECT rownum r, t1.* FROM(SELECT * FROM (SELECT * FROM NOBUDGET n JOIN NOBUDGET_DETAIL nd ON n.NOBUDGET_NO = nd.NOBUDGET_NO WHERE id=#{id} AND TYPE=#{type}) ORDER BY reg DESC)t1)t2 WHERE r >=#{startRow} AND r <=#{endRow}]]> 
  	</select>
  	
  	<!-- 예산지출시 총예산 current값에서 차감 -->
  	<update id="updateCurrentBudget" parameterType="budgetDTO">
  		update total_budget set total_budget_current=(total_budget_current-#{amount}) where budget_no=#{budget_no}
  	</update>

  	<!-- 예산+예산외 내역들 리스트로 가져오기(type으로 체크) -->
  	<select id="selectRecord" parameterType="searchForRecordDTO" resultType="allRecordDTO">
	  	SELECT t2.* FROM(SELECT rownum r, t1.* FROM(SELECT * FROM(
		SELECT n.NOBUDGET_NO, n.CATEGORY_NO, n.AMOUNT, n.reg, nd.CONTENT, nd.MEMO, nd.IMG, n."TYPE" 
		FROM NOBUDGET n JOIN NOBUDGET_DETAIL nd ON n.NOBUDGET_NO = nd.NOBUDGET_NO WHERE id=#{id} 
		<choose>
			<when test="type.equals('budgetincomeoutcome')">
				AND TYPE='income' OR TYPE='outcome' 
			</when>		
			<otherwise>
				AND TYPE=#{type}
			</otherwise>
		</choose>
		UNION ALL
		SELECT b.BUDGET_OUTCOME_NO, b.CATEGORY_NO, b.AMOUNT, b.REG, bd.CONTENT, bd.MEMO, bd.IMG, NULL AS "type" 
		FROM BUDGET b JOIN BUDGET_DETAIL bd ON b.BUDGET_OUTCOME_NO = bd.BUDGET_OUTCOME_NO WHERE id=#{id})
		 ORDER BY reg DESC)t1)t2 <![CDATA[WHERE r >=#{startRow} AND r <=#{endRow}]]>
  	</select>
  	
  	<!-- 수입+지출 내역 리스트 아이디로 가져오기 -->
  	<select id="selectNobudgetRecord" parameterType="searchForRecordDTO" resultType="allRecordDTO">
  		SELECT t2.* from(SELECT rownum r, t1.* FROM
		(SELECT * FROM (SELECT * FROM NOBUDGET n JOIN NOBUDGET_DETAIL nd ON n.NOBUDGET_NO = nd.NOBUDGET_NO WHERE id=#{id}) 
		ORDER BY reg DESC)t1)t2 <![CDATA[WHERE r >=#{startRow} AND r <=#{endRow}]]>
  	</select>
  	<!-- 아이디로 예산 총 개수 가져오기 -->
  	<select id="countBudgetRecordById" parameterType="searchForRecordDTO" resultType="int">
  		select count(*) from budget where id=#{id}
  	</select>
  	<!-- 아이디로 예산외 총 개수 가져오기 -->
  	<select id="countNoBudgetRecordById" parameterType="searchForRecordDTO" resultType="int">
  		select count(*) from nobudget where id=#{id} 
  		<choose>
  			<when test='type.equals("incomeoutcome")'>
  				AND <![CDATA[type='income' or type='outcome']]>
  			</when>
  			<when test='type.equals("all")'>
  				AND <![CDATA[type='income' or type='outcome']]>
  			</when>
  			<when test='type.equals("budgetincome")'>
  				AND <![CDATA[type='income']]>
  			</when>
  			<otherwise>
				AND <![CDATA[type='outcome']]>
			</otherwise>
  		</choose>
  	</select>
  	
  	<!-- 주어진 날짜부터 오늘까지, 카테고리번호에 따른 예산지출값의 합
	//map에는 category_no과 startDay 존재 -->
  	<select id="selectSumFromDateAndCatNo" parameterType="hashmap" resultType="int" >
  		<![CDATA[
	  		select sum(amount) from budget where category_no=#{category_no} and to_char(reg, 'yyyy-MM-dd') >= #{startDay} and reg<=sysdate
  		]]>
  	</select>
  	
  </mapper>